; PlatformIO Project Configuration File for web_platform_interface Library
;
; This is the interface/types library testing configuration with two test environments:
;   - test_native: Fast, local C++ tests with mocked Arduino APIs (default)
;   - test_esp32:  On-device ESP32 compilation verification test
;
; Visit https://docs.platformio.org/page/projectconf.html for more options

; ============================================================================
; PLATFORMIO SETTINGS
; ============================================================================
[platformio]
default_envs = test_native

; ============================================================================
; SHARED TEST CONFIGURATION
; ============================================================================
[test_base]
test_framework = unity
lib_ldf_mode = deep+
test_build_src = yes
build_unflags = -std=gnu++11
build_flags = 
	-std=gnu++17
	-DUNITY_INCLUDE_CONFIG_H
	-DSTANDALONE_TESTS
	-DWEB_PLATFORM_OPENAPI=1
	-DWEB_PLATFORM_MAKERAPI=1
lib_deps = 
	bblanchon/ArduinoJson@^6.21.0

; ============================================================================
; NATIVE TEST ENVIRONMENT (Default)
; ============================================================================
; Runs interface/type tests locally with ArduinoFake mocks for fast iteration.
; Includes code coverage analysis via gcov.
; This is the primary test environment for the interface library.
;
; Run with: pio test -e test_native
; ============================================================================
[env:test_native]
extends = test_base
platform = native
test_filter = *
build_flags = 
	${test_base.build_flags}
	-DNATIVE_PLATFORM
	; Debug symbols and no optimization
	-g
	-O0
	; Code coverage flags
	--coverage
	-fprofile-arcs
	-ftest-coverage
	-lgcov
	; Disable inlining for better coverage accuracy
	-fno-inline
	-fno-inline-small-functions
	-fno-default-inline
	; Enable ArduinoFake subsystems
	-DARDUINOFAKE_ENABLE_WIFI
	-DARDUINOFAKE_ENABLE_SERIAL
	-DARDUINOFAKE_ENABLE_STRING
lib_deps = 
	${test_base.lib_deps}
	https://github.com/FabioBatSilva/ArduinoFake.git
	Unity
check_tool = cppcheck
check_flags = cppcheck: --enable=all --std=c++17

; ============================================================================
; ESP32 HARDWARE TEST ENVIRONMENT
; ============================================================================
; Runs a minimal compilation verification test on actual ESP32-S3 hardware.
; The interface library is primarily type definitions and C++ interfaces,
; so extensive ESP32 testing is not needed - just verify it compiles/links.
; Uses the built-in Unity test framework from ESP-IDF (not external Unity lib).
;
; Run with: pio test -e test_esp32
; Note: Update COM port below to match your device
; ============================================================================
[env:test_esp32]
extends = test_base
platform = espressif32
framework = arduino
board = esp32-s3-devkitc-1
test_filter = *
build_flags = 
	${test_base.build_flags}
	-DESP_PLATFORM
	-DARDUINO_USB_MODE=1
build_src_filter = 
	+<*>
	+<../test/esp32/**/*.cpp>
; Use ESP-IDF's built-in Unity, not external Unity library
lib_ignore = Unity
; Serial communication settings
monitor_speed = 115200
upload_speed = 460800